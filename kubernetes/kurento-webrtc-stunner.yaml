# # WebRTC media server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kms
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: kms
  replicas: 1 # tells deployment to run 1 pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: kms
    spec:
      containers:
      - name: kms
        image: kurento/kurento-media-server:latest
        # image: kurento/kurento-media-server:6.7.1-xenial
        env:
          - name: "GST_DEBUG"
            # value: "Kurento*:5"
            # value: "5"
            # value: "3,sdp*:5,webrtc*:5,*dtls*:6"
            value: "4,*sdp*:6,*webrtc*:6,*endpoint*:6,agnosticbin:6,KurentoWebSocket*:6"
          - name: "KMS_ICE_TCP"
            value: "0"
          - name: "KMS_STUN_IP"
            value: ""
          - name: "KMS_STUN_PORT"
            value: ""
          - name: "KMS_TURN_URL"
            value: ""
          - name: "KMS_NETWORK_INTERFACES"
            value: "eth0"
          - name: "KMS_MIN_PORT"
            value: "10000"
          - name: "KMS_MAX_PORT"
            value: "20000"
          - name: "KMS_EXTERNAL_IPV4"
            # value: "${EXTERNAL_IP}"
            value: ""
        ports:
        - containerPort: 8888
      - name: net-debug
        image: retvari/net-debug:latest
        command: ["/bin/sh"]
        args: ["-c", "while true; do echo hello; sleep 10;done"]

---
apiVersion: v1
kind: Service
metadata:
  name: kms-control
  labels:
    app: kms-control
spec:
  ports:
    - port: 8888
      protocol: TCP
      name: kms-port
  selector:
    app: kms

# WebRTC application server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webrtc-server
spec:
  selector:
    matchLabels:
      app: webrtc-server
  replicas: 1
  template:
    metadata:
      labels:
        app: webrtc-server
    spec:
      containers:
      - name: webrtc-server
        image: webrtc-server
        command: ["npm"]
        args: ["start", "--",  "--ws_uri=ws://kms-control.default.svc.cluster.local:8888/kurento"]
        imagePullPolicy: Never
        ports:
        - containerPort: 8443

---
apiVersion: v1
kind: Service
metadata:
  name: webrtc-server
  labels:
    app: webrtc-server
spec:
  type: LoadBalancer
  selector:
    app: webrtc-server
  ports:
    - port: 8443
      protocol: TCP
      name: webrtc-server-port

# TURN server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stunner
spec:
  selector:
    matchLabels:
      app: stunner
  replicas: 1
  template:
    metadata:
      labels:
        app: stunner
    spec:
      containers:
      - name: stunnerd
        image: stunnerd:latest
        imagePullPolicy: Never
        command: ["stunnerd"]
        args: ["--users", "test=test", "--verbose" ]
        env:
        - name: PUBLIC_IP  # we use the POD IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
      - name: net-debug
        image: retvari/net-debug:latest
        command: ["/bin/sh"]
        args: ["-c", "while true; do echo hello; sleep 10;done"]

---
apiVersion: v1
kind: Service
metadata:
  name: stunner
  labels:
    app: stunner
spec:
  ports:
    # - port: 3478
    #   protocol: TCP
    #   name: sidecar-stun-tcp
    - port: 3478
      protocol: UDP
      name: stun-udp
  type: LoadBalancer
  selector:
    app: stunner

