# Stunner: An ingress gateway for WebRTC
---
# TURN server config: make sure to customize the below environment variables
apiVersion: v1
kind: ConfigMap
metadata:
  name: stunner-config
  namespace: default
data:
# The external IP configured by the load-balancer for the Stunner service
# STUNNER_PUBLIC_ADDR: "A.B.C.D"
# Credential realm, default "stunner.l7mp.io"
  STUNNER_REALM: "stunner.l7mp.io"
# Server port, default: 3478
  STUNNER_PORT: "3478"
# User name, default: "user". Make sure to customize!
  STUNNER_USERNAME: user
# Password, default: "pass". Make sure to customize!
  STUNNER_PASSWORD: pass
# Log level, default: "all:WARN"
#  STUNNER_LOGLEVEL: "all:WARN"
  STUNNER_LOGLEVEL: "all:INFO"
# Lowest relay transport port, default: 10000
  STUNNER_MIN_PORT: "10000"
# Highest relay transport port, default: 20000
  STUNNER_MAX_PORT: "20000"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stunner
  namespace: default
spec:
  selector:
    matchLabels:
      app: stunner
  replicas: 1
  template:
    metadata:
      labels:
        app: stunner
    spec:
      containers:
      - name: stunnerd
        image: l7mp/stunnerd:latest
        # imagePullPolicy: Never
        imagePullPolicy: Always
        command: ["stunnerd"]
        # override env: e.g., args: ["--user", "test=test", "-l all:INFO"]
        args: []
        envFrom:
          - configMapRef:
              name: stunner-config
        env:
        - name: STUNNER_ADDR  # we use the POD IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
      # Uncomment this if you want to deploy a sidecar container with stunner to sniff traffic
      # - name: net-debug
      #   image: retvari/net-debug:latest
      #   command: ["/bin/sh"]
      #   args: ["-c", "while true; do echo hello; sleep 10;done"]

---
apiVersion: v1
kind: Service
metadata:
  name: stunner
  namespace: default
  labels:
    app: stunner
spec:
  ports:
    - port: 3478
      targetPort: 3478
      protocol: UDP
      name: stunner-udp
  type: LoadBalancer
  selector:
    app: stunner

---
# STUN/TURN over TCP: Not implemented as of v0.1
# apiVersion: v1
# kind: Service
# metadata:
#   name: stunner-tcp
#   labels:
#     app: stunner
# spec:
#   ports:
#     - port: 3478
#       targetPort: 3478
#       protocol: TCP
#       name: stunner-tcp
#   type: LoadBalancer
#   selector:
#     app: stunner
    
---
# lock down access from the TURN server to anywhere!
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: stunner-network-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: stunner
  policyTypes:
  - Egress
